- name: Check if brew PostgreSQL service is running
  ansible.builtin.shell:
    cmd: "set -o pipefail && brew services list | grep postgresql@{{ postgresql_version }} | awk '{ print $2}'"
    executable: "{{ ansible_env.HOMEBREW_PREFIX }}/bin/zsh"
  register: postgresql_brew_service_status
  changed_when: false

- name: Ensure brew PostgreSQL service is stopped
  ansible.builtin.command: brew services stop postgresql@{{ postgresql_version }}
  when: postgresql_brew_service_status.stdout.strip() != 'none'
  changed_when: true

- name: Check if brew PostgreSQL server is running
  ansible.builtin.command: "pg_ctl -D {{ postgresql_brew_data_dir }} status"
  environment:
    PATH: "{{ postgresql_brew_bin_dir }}:{{ ansible_env.PATH }}"
  register: postgresql_brew_server_status
  changed_when: false
  failed_when: false

- name: Ensure brew PostgreSQL server is stopped
  ansible.builtin.command: "pg_ctl -D {{ postgresql_brew_data_dir }} stop"
  environment:
    PATH: "{{ postgresql_brew_bin_dir }}:{{ ansible_env.PATH }}"
  when: postgresql_brew_server_status.rc == 0
  changed_when: true

- name: Check if PostgreSQL service is running
  ansible.builtin.command: "pg_ctl -D {{ postgresql_user_data_dir }} status"
  environment:
    PATH: "{{ postgresql_brew_bin_dir }}:{{ ansible_env.PATH }}"
  register: postgresql_user_server_status
  changed_when: false
  failed_when: false

- name: Ensure PostgreSQL service is stopped
  ansible.builtin.command: "pg_ctl -D {{ postgresql_user_data_dir }} stop"
  environment:
    PATH: "{{ postgresql_brew_bin_dir }}:{{ ansible_env.PATH }}"
  when: postgresql_user_server_status.rc == 0
  changed_when: true
